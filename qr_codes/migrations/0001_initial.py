# Generated by Django 5.2.6 on 2025-09-10 10:50

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExchangeRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points', models.IntegerField()),
                ('exchange_code', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('rejected', 'Rejeté'), ('completed', 'Complété')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, max_length=500)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_exchanges', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchange_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Exchange Request',
                'verbose_name_plural': 'Exchange Requests',
                'db_table': 'exchange_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GameHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('game_type', models.CharField(choices=[('scratch_win', 'Scratch & Win'), ('spin_wheel', 'Roue de la Chance'), ('memory_game', 'Jeu de Mémoire'), ('quiz', 'Quiz')], max_length=20)),
                ('points_spent', models.IntegerField()),
                ('points_won', models.IntegerField()),
                ('played_at', models.DateTimeField(auto_now_add=True)),
                ('is_winning', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Game History',
                'verbose_name_plural': 'Game History',
                'db_table': 'game_history',
                'ordering': ['-played_at'],
            },
        ),
        migrations.CreateModel(
            name='QRCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=100, unique=True)),
                ('points', models.IntegerField()),
                ('description', models.TextField(max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_qr_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'QR Code',
                'verbose_name_plural': 'QR Codes',
                'db_table': 'qr_codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyGameLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_type', models.CharField(choices=[('scratch_win', 'Scratch & Win'), ('spin_wheel', 'Roue de la Chance'), ('memory_game', 'Jeu de Mémoire'), ('quiz', 'Quiz')], max_length=20)),
                ('date', models.DateField()),
                ('games_played', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_game_limits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Daily Game Limit',
                'verbose_name_plural': 'Daily Game Limits',
                'db_table': 'daily_game_limits',
                'unique_together': {('user', 'game_type', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserQRCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scanned_at', models.DateTimeField(auto_now_add=True)),
                ('points_earned', models.IntegerField()),
                ('qr_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scanned_by_users', to='qr_codes.qrcode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scanned_qr_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User QR Code',
                'verbose_name_plural': 'User QR Codes',
                'db_table': 'user_qr_codes',
                'ordering': ['-scanned_at'],
                'unique_together': {('user', 'qr_code')},
            },
        ),
    ]
